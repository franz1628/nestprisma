generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Alumno {
  id               Int           @id(map: "PK_Alumno") @default(autoincrement())
  nombres          String        @db.VarChar(90)
  apellido_paterno String        @db.VarChar(90)
  apellido_materno String?       @db.VarChar(90)
  fecha_nacimiento DateTime      @db.Date
  numero_documento String        @db.VarChar(20)
  id_genero        Int
  id_tipoDocumento Int
  estado           Int?          @default(1, map: "DF__Alumno__estado__3B75D760")
  created_at       DateTime      @default(now(), map: "DF__Alumno__created___3C69FB99") @db.DateTime
  updated_at       DateTime?     @db.DateTime
  Genero           Genero        @relation(fields: [id_genero], references: [id], onUpdate: NoAction, map: "PK_Alumno_Genero")
  TipoDocumento    TipoDocumento @relation(fields: [id_tipoDocumento], references: [id], onUpdate: NoAction, map: "PK_Alumno_TipoDocumento")
}

model Genero {
  id          Int       @id(map: "PK_Genero") @default(autoincrement())
  descripcion String    @db.VarChar(90)
  estado      Int?      @default(1, map: "Genero_estado_default")
  created_at  DateTime  @default(now(), map: "DF__Genero__created___398D8EEE") @db.DateTime
  updated_at  DateTime? @db.DateTime
  Alumno      Alumno[]
}

model TipoDocumento {
  id          Int       @id(map: "PK_TipoDocumento") @default(autoincrement())
  descripcion String    @db.VarChar(90)
  estado      Int       @default(1, map: "DF__TipoDocum__estad__36B12243")
  created_at  DateTime  @default(now(), map: "DF__TipoDocum__creat__37A5467C") @db.DateTime
  updated_at  DateTime? @db.DateTime
  Alumno      Alumno[]
}
